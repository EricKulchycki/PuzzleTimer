Developer Tasks Log

============================================

Tasks are sorted as follows:

CATEGORY
    - Dev Task A) (length, if applicable)
        - Subtask a:
    - Dev Task B)
        * user comment(s)

NOTE: All  tasks that are unmarked for time are assumed to take 1 hours

==========================================


BASIC TIMER IMPLEMENTATION
- Implement Basic Timer backend code (1 day)
    - Store elapsed time as a long (as stated in the docs for Time variables)
    - Start Method: Record start time
    - Create Function to calculate current elapsed time
        * via difference between recorded time in start method and current time
    - Stop Method: Calculate final difference between start time and current time
    - Create function to reset elapsed time variable
        *for reset
    - Create function to save elapsed time to file
    - Create function to add delays to timer (3 hours)
        *use variables for pre and post timings
    - Create function to save current time to file (3 hours)
    - Create function to retrieve past times from file (3 hours)
    - Create function to compare current time to previous saved times

LAP IMPLEMENTATION
- Implement Lap backend code (1 day)
    - Create function that records time segments
        *Java calculates elapsed time as a difference between two "Date" objects (result is a Long)
    - Create java class that dynamically holds lap segments together from a single run
        *probably linked list
    - Add functionality to stop method (from BASIC TIMER) to also stop the last split segment

INTERFACE
- Create Main Menu Interface on startup (1 day)
- Add menu to allow user to switch between interfaces (clock, past times, scramble, etc) (1 day)
    - Viewable on every interface

MAIN MENU INTERFACE
- Add buttons that allow the user to access other user interfaces (1 hrs)

TIMER INTERFACE
- Add Main Timer functionality
    - Call Current time function multiple times/second
- Add Start Button to interface with functionality
- Add Stop Button to interface with functionality
    *or combine Start and Stop Button functionality into a single button
    *or add functionality upon user screen touch
- Add Reset Button to interface with functionality
    - Disable/Hide button when clock is running
- Add Split Button to interface with functionality
    - Disable button when clock is not running
- Add Delay menu to interface with functionality
    - Allow users to modify variables in delay function (see BASIC TIMER IMPLEMENTATION)
    - Disable menu when clock is running
- Add Menu to view past times/splits

STORAGE
- Create a Time class as main unit of measurement
	*Used to hold both split and full run times
	*(needs another name, Time is already a [depreciated] Java class)
- Create Split Class
	-Linked list of nodes with Time objects
	-Create nodes as split button inputs are made
- Create form of storage for Time and Split classes
	for prototype, create linked lists
 		Linked list updated with Save Button input
	for finished version, transfer from linked lists to persistent storage
		Savefile? Database?





